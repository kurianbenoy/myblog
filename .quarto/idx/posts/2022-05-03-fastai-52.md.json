{"title":"Deep Learning For Coders with fastai Couse - Lesson 2","markdown":{"yaml":{"title":"Deep Learning For Coders with fastai Couse - Lesson 2","type":"post","published":false,"tag":["fastbook","myself","ML","Deep learning","fastai","journey"],"readtime":true,"author":"kurianbenoy"},"headingText":"fastsetup","containsRefs":false,"markdown":"\n\nWe walked through the first model, and learned that the stuff we learn in code.\nTo build grizzly bears and teddy bears.\n\nRandomResized Question:\nDoes randomresized crop duplicate the image -- i.e. you get multiple copies and you ensure that all the parts of the image are used in training? or does it just make one crop?\n\nAlex's question(didn't understand)\n\n\nBuild a good model. Understand and took a look at data and see what can be done to clean this dataset, as you slowly progress on training models. Actually this technique is SUPER helpful-in a recent interview, Chris Deotte (4x Grandmaster) shared how these resizing techniques helped them win a solo gold\n\n4GB machine, class and holt occasionaly\n\nIn GPU, always run one things at a time.\n\nIf you are in yellow, always stop try. First go ahead and watch fully without understanding.\nThen watch again and follow time. This is an unusual way.\n\n+1 for what Jeremy just said. This is how I do it ... I just take notes where things were in the live lecture that I want to go back to later.\n\nPointed to tanishq tutorial on huggingface space. Hamel is even using github desktop, yet\nmost of time we use terminal. In windows, we have WSL, just use ubuntu. He showed installing via\nubuntu. Jeremy like Windows, but then there is linux environment with a good Deep jig.\nHe uses 4GB CPU.\n\nGithub desktop in Ubuntu\n\nhttps://gist.github.com/berkorbay/6feda478a00b0432d13f1fc0a50467f1\n\nHe created a simple fastai model, uploading model in dogs_cat and then export.\n\nQuick gradio demo\nCatas vs Dog inference\n\nJupyter notebooks debugging with magic methods %magic\n\nLook at dict, numbers. Changing images predicted and issue with gradio using function to\nreturn gradio docs. Tensors is not supported at moment.\n\nJeremy with cats vs dogs classifier. The donny classifier which predicted as cat dog.\nHer daughter asked these questions(Cat mixed with Dog).\nNow we have a simple example. \n\n\nInstalling python and jupyter-notebooks.\n\nhttps://github.com/fastai/fastsetup\n\nA big issue in laptops. There is a setup_conda.sh. In linux or mac, don't use that python.\n\nThat Python will mess stuff up. Running conda based systems is good.\n\nRun mamba install fastai\nmamba install -c fastchan jupyter nbdev\n\nSetting up huggingspace. Then using git & conda.\n\nDid dogs vs cats\n\n## Gradio with webapps\n\nAPI in gradio\nhttps://hf.space/embed/kurianbenoy/audioclassification/api\n\nWith live demo, we could have easily used it.\n\nfetch('https://hf.space/embed/kurianbenoy/audioclassification/+/api/predict/', { method: \"POST\", body: JSON.stringify({\"data\":[ {\"data\": null, \"is_example\": true, \"name\": \"000003.ogg\"}\n\n]}), headers: { \"Content-Type\": \"application/json\" } }).then(function(response) { return response.json(); }).then(function(json_response){ console.log(json_response) })\n\nWith a Javascript app, there is not a lot of steps. There is an\n\nHow do you create a website for website. Without any software, you can run this file. That's so\ncool about javascript. There is something cool called github pages\n\nHe used alembic theme. With a particular  configuration. At top of any github pages, you should\nadd three dashes. The world of javascript apps, he build this cool apps.\n\nYou don't really need any money, any work with cool stuff.\n\nNext week we will be learning and diving into NLP. Then \n\nLot of frontend developers. Don't be too afraid to run in javascript\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"2022-05-03-fastai-52.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.280","theme":"sketchy","title-block-banner":true,"title":"Deep Learning For Coders with fastai Couse - Lesson 2","type":"post","published":false,"tag":["fastbook","myself","ML","Deep learning","fastai","journey"],"readtime":true,"author":"kurianbenoy"},"extensions":{"book":{"multiFile":true}}}}}